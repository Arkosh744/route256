version: "3.8"

services:

  checkout:
    image: checkout
    build: ./checkout/
    networks:
      - checkout_network
      - service_network
    depends_on:
      - checkout_postgres
      - checkout_pgbouncer
      - jaeger
    ports:
      - "8080:8080"
      - "8088:8088"
      - "50052:50052"
      - "7080:7080"
    volumes:
      - ./logs/data/checkout.txt:/log.txt
    command:
      - "/bin/sh"
      - "-c"
      - "/app 2>&1 | tee /log.txt"

  checkout_postgres:
    image: postgres:15.1
    environment:
      POSTGRES_USER: checkout-user
      POSTGRES_PASSWORD: checkout-pass
      POSTGRES_DB: checkout-db
    networks:
      - checkout_network
    ports:
      - "5439:5432"
    volumes:
      - checkout_postgres_data:/var/lib/postgresql/data/

  checkout_pgbouncer:
    image: edoburu/pgbouncer:latest
    environment:
      DB_USER: checkout-user
      DB_PASSWORD: checkout-pass
      DB_HOST: checkout_postgres
      DB_PORT: 5432
      POOL_MODE: session
      ADMIN_USERS: checkout-user
      AUTH_TYPE: plain
    networks:
      - checkout_network
    ports:
      - "6432:5432"


  loms:
    image: loms
    build: ./loms/
    networks:
      - loms_network
      - service_network
    ports:
      - "50053:50053"
      - "7081:7081"
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
    depends_on:
      kafka1:
        condition: service_healthy
      kafka2:
        condition: service_healthy
      kafka3:
        condition: service_healthy
      jaeger:
        condition: service_started
    volumes:
      - ./logs/data/loms.txt:/log.txt
    command:
      - "/bin/sh"
      - "-c"
      - "/app 2>&1 | tee /log.txt"

  loms_postgres:
    image: postgres:15.1
    environment:
      POSTGRES_USER: loms-user
      POSTGRES_PASSWORD: loms-pass
      POSTGRES_DB: loms-db
    networks:
      - loms_network
    volumes:
      - loms_postgres_data:/var/lib/postgresql/data/

  loms_pgbouncer:
    image: edoburu/pgbouncer:latest
    environment:
      DB_USER: loms-user
      DB_PASSWORD: loms-pass
      DB_HOST: loms_postgres
      DB_PORT: 5432
      POOL_MODE: session
      ADMIN_USERS: loms-user
      AUTH_TYPE: plain
    networks:
      - loms_network
    ports:
      - "6433:5432"

  notifications:
    image: notifications
    build: ./notifications/
    ports:
      - "8082:8082"
      - "7082:7082"
      - "50055:50055"
    networks:
      - service_network
      - notifications_network
      - loms_network
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
    depends_on:
      kafka1:
        condition: service_healthy
      kafka2:
        condition: service_healthy
      kafka3:
        condition: service_healthy
      jaeger:
        condition: service_started
    volumes:
      - ./logs/data/loms.txt:/log.txt
    command:
      - "/bin/sh"
      - "-c"
      - "/app 2>&1 | tee /log.txt"

  notifications_redis:
    image: redis:latest
    networks:
      - notifications_network
    ports:
      - "6666:6379"
    volumes:
      - notifications_redis_data:/data

  # kafka
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      ZOOKEEPER_SERVERS: zookeeper:2888:3888
    healthcheck:
      test: echo stat | nc localhost 2181
      interval: 10s
      timeout: 10s
      retries: 3
    ports:
      - "2181:2181"
      - "2888:2888"
      - "3888:3888"
    networks:
      - service_network
  kafka1:
    image: confluentinc/cp-kafka:latest
    healthcheck:
      test: ps augwwx | egrep Kafka
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
      - "9091:9091"
    networks:
      - service_network
    deploy:
      restart_policy:
        condition: on-failure
        delay: 3s
        max_attempts: 5
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_LISTNERS: LISTNER_INT://kafka1:29091,LISTENER_EXT://0.0.0.0:9091
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: LISTNER_INT://kafka1:29091,LISTENER_EXT://localhost:9091
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTNER_INT:PLAINTEXT,LISTENER_EXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTNER_INT
      ZOOKEEPER: zookeeper:2181
  kafka2:
    image: confluentinc/cp-kafka:latest
    healthcheck:
      test: ps augwwx | egrep Kafka
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
      - "9092:9092"
    networks:
      - service_network
    deploy:
      restart_policy:
        condition: on-failure
        delay: 3s
        max_attempts: 5
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_LISTNERS: LISTNER_INT://kafka2:29092,LISTENER_EXT://0.0.0.0:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: LISTNER_INT://kafka2:29091,LISTENER_EXT://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTNER_INT:PLAINTEXT,LISTENER_EXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTNER_INT
      ZOOKEEPER: zookeeper:2181
  kafka3:
    image: confluentinc/cp-kafka:latest
    healthcheck:
      test: ps augwwx | egrep Kafka
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
      - "9099:9099"
    networks:
      - service_network
    deploy:
      restart_policy:
        condition: on-failure
        delay: 3s
        max_attempts: 5
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_LISTNERS: LISTNER_INT://kafka3:29093,LISTENER_EXT://0.0.0.0:9099
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: LISTNER_INT://kafka3:29093,LISTENER_EXT://localhost:9099
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTNER_INT:PLAINTEXT,LISTENER_EXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTNER_INT
      ZOOKEEPER: zookeeper:2181

  jaeger:
    image: jaegertracing/all-in-one:1.18
    networks:
      - service_network
    ports:
      - 5775:5775/udp
      - 6831:6831/udp
      - 6832:6832/udp
      - 5778:5778
      - 16686:16686 # web
      - 14268:14268
      - 9411:9411

  prometheus:
    image: prom/prometheus
    networks:
      - service_network
    ports:
      - 9090:9090
    volumes:
      - ./metrics/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./metrics/alerts.yml:/etc/prometheus/alerts.yml
    extra_hosts:
      - host.docker.internal:host-gateway


  alertmanager:
    image: prom/alertmanager
    networks:
      - service_network
    ports:
      - 9093:9093
    volumes:
      - ./metrics/alerts_tg.yml:/etc/alertmanager/alertmanager.yml
    environment:
      TZ: "Europe/Moscow"
    restart: unless-stopped
    depends_on:
      - prometheus
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/etc/alertmanager/data'

  grafana:
    image: grafana/grafana-oss
    networks:
      - service_network
    ports:
      - 3000:3000
    volumes:
      - grafana-data:/var/lib/grafana
    links:
      - prometheus


networks:
  checkout_network:
  loms_network:
  notifications_network:
  service_network:

volumes:
  checkout_postgres_data:
  loms_postgres_data:
  notifications_redis_data:

  grafana-data:
